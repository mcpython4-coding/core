started these clone on 12th of July, 2019
[github]: started day 1 as 12th of July, 2019
[github]: created git repo, author: uuk, uuk has now all rights onto these project
[uuk]: added tasks.list storing some todo's for the future
[uuk]: added version.info file
[uuk]: added tools/updatelicenceheaders [1]
[github]: started day 2 as 13th of July, 2019
[uuk]: added tools/updatelicenceheaders [2]
[uuk]: added code from https://github.com/fogleman/Minecraft
[uuk]: created __main__.py for launching
[uuk]: fixed missing call of main.main() in __main__
[uuk]: fixed library bug locally, if somebody gets when closing the window an exception from weakref, contact me and I
        will give you an workaround
[uuk]: removed compatibility to python 2
[uuk]: when starting, mouse will NOT be locked anymore
[uuk]: splitted everything into single files
[uuk]: added warning msg when update is called to less
[uuk]: new chunk format: (x, z) instead of (x, 0, z)
[uuk]: added event/EventHandler
[uuk]: added globals
[uuk]: added events
[uuk]: added exception handling for events
[uuk]: added base class for blocks and block handler
[uuk]: added missing texture to texture.png
[uuk]: all blocks are now using the new block system
[uuk]: added hooks for all different block uses to Block-class
[uuk]: added dirt-block
[uuk]: added "air"-block
[uuk]: added cleanup & regenerate-function to model
[uuk]: pressing "N" ends now in an new level
[uuk]: added State-class, StateHandler, StatePart
[uuk]: added activate/deactivate callback functions to EventHandler
[uuk]: added State for game, StatePart of GameLoop
[uuk]: moved all eventhandling out of window into GameStatePart and GameState
[uuk]: added Escape-state
[uuk]: fixed some function misspells
[uuk]: added state/ui for buttons
[uuk]: added event/EventInfo for getting an info storing exactly when event args are True
[uuk]: fixed possible memory leak when changing fast chunks (chunks were shown before other were hidden)
[uuk]: added assets-folder
[uuk]: added some resources from mc 1.14.4-pre5
[uuk]: added textures/helpers for image editing, for that PIL is required
[uuk]: added local to globals
[uuk]: added tmp-folder
[github]: started day 3 as 14th of July, 2019
[uuk]: finished UIPartButton
[uuk]: some licence header improvements
[uuk]: added UIPartLable
[uuk]: added callbackhelper - an class for calling an function with extra args
[uuk]: fixed that when switching statets sub-parts are recreated so we are not removing the old
[uuk]: finished EscapeState for the moment
[uuk]: added StateStartMenu
[uuk]: added two new rendering events: "render:draw:2d:background" & "render:draw:2d:overlay"
[uuk]: added text_size attribute to UIPartLable
[github]: started day 4 as 15th of July, 2019
[uuk]: fixed bug: world is invisable after loading
[uuk]: added immediate-parameter to sector-functions of Model
[uuk]: fixed bug: you can spawn in blocks
[uuk]: added TickHandler with simple ticking
[uuk]: added on_block_update()-method to Block
[uuk]: removed N-key to generate an new level
[uuk]: added ability to use add_block & remove_block with block instances
[uuk]: sand will now fall by 2 Blocks / sec
[uuk]: added textureatlas
[uuk]: added helper function for transforming an pyglet image into an pillow one
[uuk]: added resourcelocator making it possible to extract resources direct out of the .jar file,
       an public instance is used
[uuk]: removed textures from system
[uuk]: removed texture group of model, we are using now texture atlas system
[uuk]: added ModelLoader
[uuk]: setup() was callen twice in __main__.py
[github]: started day 5 as 16th of July, 2019
[uuk]: fixed bugs around Model system
[uuk]: added missingtexture-image
[uuk]: added cube_verices_2 & tex_coords_2 for definiting all dimensions (xyz)
[uuk]: missing texture will now be loaded into every texture atlas
[uuk]: model.hide_block & model.show_block accepts now also blocks
[uuk]: added auto-injected misssing-texture-block
[uuk]: ResourceLocator accepts now files without G.local before
[uuk]: if an face is not definitied, it will be missingtexture
[github]: started day 6 as 17th of July, 2019
[uuk]: fixed bugs around the model system & the atlas system
[uuk]: added some security checks in various functions
[uuk]: added some cleanup function into some functions
[uuk]: added assets/models/block_modified-folder for giving the game alternative models to load (used for grass at the moment)
[uuk]: added texture/factory for classes working with images from pre-definited files
[uuk]: added the following blocks: bedrock, cobblestone
[uuk]: made stone brakeable
[uuk]: added some kind of info state
[uuk]: added UIPartImage
[github]: started day 7 as 18th of July, 2019
[uuk]: optimized above state
[uuk]: updated jar-archive to 1.14.4-pre6
[uuk]: added interaction to above state
[uuk]: added player-class
[uuk]: added activate_crosshair-attribute to StatePartGame
[uuk]: added Inventory, InventoryHandler, Slot, ItemStack
[uuk]: added Items, Stone-item
[github]: started day 8 as 19th of July, 2019
[uuk]: added PlayerHotbar-Inventory
[uuk]: fixed bug: stone has no texture location
[uuk]: fixed bug: copy of slot has no itemstack-attribute
[uuk]: fixed bugs around rendering inventorys
[uuk]: slot position is now relative to base position of background image, making resizing now working correct
[uuk]: added json-support to ResourceLocator
[uuk]: added config-file-option to Inventory
[uuk]: pressing ESC in escape-state will now return to game
[uuk]: added factory entry: generating hotbar image
[uuk]: added on_create-function to Inventory
[uuk]: added resize & cut task to texture/factory
[uuk]: added ItemImageTable and reworked old Slot-system to use it; items will now be resized internally
[uuk]: added key.R support for reloading inventory config
[uuk]: added add_to_free_place-function to player
[uuk]: moved hotbar a little bit down
[uuk]: added reload_config-function to Inventory
[uuk]: moved a lot of stuff into inventory config
[uuk]: added selection for active inventory slot
[uuk]: fixed bug with amount label rendering at wrong position
[uuk]: fixed miss-spell of Inventory's position-attribute named positon
[uuk]: fixed bug: amount labels are overlapped by next items
[github]: started day 9 as 20th of July, 2019
[uuk]: added allow_player_remove & allow_player_insert-attribute to Slot, added to config system
[uuk]: removed old block selection system
[uuk]: added on_draw_over_image-function to Inventory
[uuk]: fixed bug: in gamemode 1, bedrock can't be broken
[uuk]: added mouse-middle support
[uuk]: fixed bug: itemstack is getting the class, not an instance of it when creating with itemname
[uuk]: added main-part of the inventory
[uuk]: enabled sub-locations in archives for ResourceLocator
[uuk]: when adding an empty array to texture atlas, it will be simply skipped
[uuk]: updated .jar to 1.14.4
[uuk]: fixed bug: when opening an inventory, you can move yourself by arrow-keys
[uuk]: key E will close now also the inventory
[uuk]: fixed bug: ESC can be used when an inventory is opened to get to the esc-screen
[uuk]: fixed bug: resize with factory was some kind broken due to an wrong argument
[uuk]: added allow_player_add_to_free_place-attribute to slot
[uuk]: fixed bug: slotcopy has no allow_[...]-attributes
[uuk]: added mouse interaction
[uuk]: fixed bug: remove/insert options to Slot were wrong
[uuk]: added Chat as an inventory
[uuk]: added util/opengl
[uuk]: added event "user:keyboard:enter" when user enters an text (window: on_text(text: str))
[uuk]: added Command-system
[uuk]: added /give-command (structure: selector, itemname, optional: int)
[uuk]: add_to_free_place of player will now search for an used stack before using empty
[uuk]: fixed bug: add_to_free_place when adding to an not-full stack the result will be what was added not the rest
[uuk]: fixed bug: amount for slot was after creation always 2 due to an missed debug line
[uuk]: fixed bug: ItemStack.copy() is not right
[uuk]: added /gamemode-command with number and string using
[uuk]: fixed bug: in gamemode 3, you can't move
[uuk]: fixed bug: in gamemode 3, hitbox of blocks were drawn
[uuk]: added SELECT_DEFINITED_STRING-type to CommandEntryType, reworked /gamemode-command to use it
[github]: started day 10 as 21th of July, 2019
[uuk]: added OPEN_END_UNDEFINITED_STRING-type to CommandEntryType
[uuk]: added /execute-command
[uuk]: added ParsingCommandInfo for storing how and where the command is parsed from
[uuk]: position & selector types will now return an list of elements instead of an single one
[uuk]: position will accept now ~-inputs
[uuk]: added commands: /kill, /clear, /teleport, /tp
[uuk]: main_entry can now be list
[uuk]: added kill-method to player
[uuk]: updated licence headers to fit the version of jar used in these project
[uuk]: fixed bug: Can get 0-Slot by right-clicking an 1-Slot
[github]: started day 11 as 22th of July, 2019
[uuk]: fixed some bugs around /tp & /teleport
[uuk]: added some security to math functions
[uuk]: added /help-command
[github]: started day 12 as 2nd of August, 2019
[uuk]: added StateBlockItemGenerator
[uuk]: added clearcolor-attribute to StatePartGame
[uuk]: added get_used_models-attribute to Block
[uuk]: speeded model loading up by loading only the used models and the models which have childs
[uuk]: added block_update-parameter to add & remove functions of model
[uuk]: added build-limits (y <0 and >255), changed world generation a little bit to fit in
[uuk]: pressing during moving mouse rotates now the camera normally
[uuk]: braking & setting blocks is now always when pressing mouse, not only on_press
[uuk]: added brake-time-attribute to block, gamemode 1 is instant mining
[uuk]: added events: user:mouse:release, user:mouse:drag
[uuk]: added setted_to-attribute to Block
[github]: started day 13 as 17th of August, 2019
[uuk]: added some interesting tasks
[github]: started day 14 as 18th of August, 2019
[uuk]: added the following blocks: coal ore, iron ore, gold ore, emerald ore, redstone ore, diamond ore, lapis ore
[uuk]: fixed bug: ItemStone-class still exists outside the generation system
[uuk]: splitted model into Chunk, Dimension & World, removed Model, renamed globals model to world
[uuk]: implemented some kind of Dimension-system
[uuk]: moved some code for adding / removing blocks around
[uuk]: fixed bug: braking "void" raises an exception due to an missed check
[uuk]: removed world gen for now, only one stone block is generated
[uuk]: removed old & unused field out of chunk-class
[uuk]: added system for generation task storage in Chunk
[uuk]: removed initialize function from system, removed generation events
[uuk]: new world generation system: An feature->layer->config definition system
[uuk]: implemented layer system with LayerConfig, added normal Bedrock layer
[uuk]: added GenerationMode-system, added default overworld generator
[github]: started day 15 as 19th of August, 2019
[uuk]: system will now generate properly
[uuk]: finished bedrock layer
[uuk]: batches will now be part of dimension instead of chunk
[uuk]: added some code to chunk to definite parameters which should be loaded when an new chunk is created. usefull for
       world gen tasks
[uuk]: added reload-command, /generate [<x> <z>]-command
[github] started day 15 as 21th of August, 2019
[uuk]: added TemperatureMapLayer
[uuk]: fixed bug in #1 by adding some checks and resets
[uuk]: added feature 1 out of #1, so player will be killed under level -10
[uuk]: added DefaultBiomeLayer
[uuk]: fixed bug: value in LandMassLayer-map was float instead of landmass name
[uuk]: fixed bug: BlockSand fall-system gave errors due to an overlooked look into model.world
[uuk]: fixed bug: world is not generated during world generation call, instead during runtime -> lag!
[github] started day 16 as 22th of August, 2019
[uuk]: fixed bugs around world generation
[uuk]: removed ocean from landmasses, it is not used at the moment
[uuk]: added biome-lable (not working?)
[uuk]: added gamemode lable
[uuk]: added new biome: plains
[uuk]: tweaked some world generation constants
[uuk]: added option in StatePartGame to disable lable
[uuk]: in StateBlockItemGenerator, caption will show where we are
[uuk]: fixed bug: player.add_to_free_place could place items into armor, crafting & offhand slots
[uuk]: crafting slots of player will now be automaticly cleared when closed addding stuff into inventory
[uuk]: added sprinting, reworked speed for flying & gamemode 3
[uuk]: added HeightMapLayer, added get_height_range-function to Biome
[uuk]: fixed biome-lable, missed an normalize(vector)-call
[uuk]: reworked addition of blocks in chunk by adding extra map due to better access in future systems
[uuk]: added DefaultStonePlacementLayer for generating stone
[uuk]: fixed bug: generating chunks during runtime causes them to never get the is_ready-flag True
[uuk]: Chunk.update_visable is now faster by making it runtime-operating
[uuk]: added DefaultTopLayerLayer for for example grass & dirt on top of the stone
[uuk]: lable size is now smaller, block looking at is now part of lable
[uuk]: added BlockFactory
[github] started day 17 as 23th of August, 2019
[uuk]: added block-base-system, added IFallingBlock, added system for registry in BlockHandler
[uuk]: fixed bug: braking blocks did not update visable state
[uuk]: added ItemFactory
[uuk]: added items: apple, arrow, baked potato, beef, beetroot, beetroot soup, black dye, blaze powder, blaze rod,
                    blue dye, bone, bone meal, book, bowl, bread, brick, broken elytra, brown dye, carrot,
                    charcoal, chicken, chorus fruit, clay, coal, cod, cooked chicken, cooked cod, cooked mutton,
                    cooked porkchop, cooked rabbit, cooked salmon, cookie, cyan dye, diamond, dried kelp, egg,
                    emerald, ender eye, ender pearl, feather, fermented spider eye, flint, ghast tear,
                    glistering melon slice, glowstone dust, golden apple, gold ingot, gold nugget, gray dye, green dye,
                    gunpowder, ink sac, iron ingot, iron nugget, lapis lazuli, leather, light blue dye,
                    light gray dye, lime dye, magenta dye, magma cream, melon slice, mutton, name tag, nether brick,
                    nether star, nether wart, orange dye, pink dye, poisonous potato, porkchop, potato, purple dye,
                    quartz, rabbit, redstone, red dye, rotten flesh, salmon, shulker shell, slime ball, spider eye,
                    stick, string, sugar, wheat, white dye, yellow dye
[uuk]: added areas to the log
[github]: started day 18 as 24th of August, 2019
[xkcdjerry]: fixed a bug out of #1
[uuk]: added xkcdjerry to licence headers
[uuk]: fixed bug in #1: when player falls out of world, he falls some way through ground after respawning
[uuk]: after a world is generated, game is now faster
[uuk]: BlockItemFactory is now faster (#1)
[uuk]: player default gamemode will now be 0 (#1)
[uuk]: fixed bug: player gamemode is not reset after generating new world
[uuk]: changed fly key to double space (#1)
[uuk]: changed behaviour of flying (#1?) so now pressing space / shift goes up/down
[uuk]: added mouse-scroll system (#1) for slots
[uuk]: fixed bug in #1: exception like World object has no attribute world
[uuk]: fixed bug in #1: can't set blocks in gamemode 0 due to an wrong gamemode check
[uuk]: added blocks: coal block, diamond block, emerald block, gold block, iron block, lapis block, redstone block
[uuk]: CommandEntries are now registered to CommandHandler and are extendable
[uuk]: made generated area smaller for faster generation time
[uuk]: added an registry for selectors, current selectors: @s, @p, @r, @a
[uuk]: added /setblock-command, /fill-command
[uuk]: added dimension-attribute to command info
[uuk]: fixed bug: position-entry does only decode ~-parameters, not valid setting it
[uuk]: fixed some miss-spells
[uuk]: added new enum: EnumSide
[uuk]: added is_solid_side-function to Block
[uuk]: util.math.get_max_y(position) accepts now also an x,z position
[uuk]: util.math.cube_vertices & util.math.cube_vertices_2 supports now face-deactivating
[uuk]: made it possible to hide individual block faces
[uuk]: fixed bug: Dimension.get_block did not access blocks that should be generated in the future
[uuk]: fixed bug: Chunk.get_block did NOT give None back if position is empty
[github]: started day 19 as first of September, 2019
[uuk]: cleaned up files & fixed some bugs:
    - block directory
[github]: started day 20 as second of September, 2019
    - chat directory
[uuk]: /generate accepts now an area
[uuk]: /give-command give you now maximal the max stack size, not more
    - event directory
[uuk]: fixed bug: TickHandler.bind_redstone_tick was self-calling
    - gui directory
[uuk]: implemented crafting system
[uuk]: slot has now an on_update, allow_half_getting & on_shift_click implementation
[uuk]: ItemStacks & Items have now an == implementation
[github]: started day 20 as third of September, 2019
[uuk]: added states to customize parts of the world generation
[uuk]: added ToggleButton
[uuk]: tweaked some collision detection
[uuk]: rewritten ResourceLocator, made it possible to add own resource packs
[uuk]: rewritten model system, BlockStates are now used
[uuk]: rewritten texture atlas system, rewritten texturefactory
[github]: started day 21 as 5th of September, 2019
[uuk]: worked on the rewrite (took me longer than expected due to some errors in model texture getting)
[uuk]: implemented base log system  (#1)
[uuk]: block states accept now rotations, the next will optimize it a bit
[uuk]: increased texture atlas size to 64x64 images per atlas, and it is now possible to create some with custom size
[uuk]: fixed bug: math.tex_coords has wrong texture order
[github]: started day 22 as 6th of September, 2019
[uuk]: fixed bug: BlockState draws all states which should be selected by random at once
[uuk]: added spruce, birch, jungle, acacia & dark oak log; oak, spruce, birch, jungle, acacia & dark oak planks (#1)
[uuk]: fixed bug: some faces of non-upper logs were rotated wrong due to an wrong texture rotation
[github]: started day 23 as 7th of September, 2019
[uuk]: speed up loading again
[uuk]: added stripped logs, wood, stripped wood, leaves
[uuk]: added BlockConfig for adding blocks with alpha (there is stored that they have alpha)
[uuk]: added alpha-batch to rendering system
[uuk]: added gravel, andesite, polished andesite, diorite, polished diorite, granite, polished granite
[uuk]: blocklist of blockhandler is now sorted after name
[uuk]: added trees to world generation
[github]: started day 24 as 8th of September, 2019
[uuk]: moved registries to one system. added registration events. Registries can be locked and will be after startup
[uuk]: registry are now named
[github]: started day 25 as 9th of September, 2019
[uuk]: finished up above changes
[uuk]: fixed bug: @a and @r were not registered correct
[xkcdjerry]: removed old unused code in __main__->try->main
[uuk]: added setup tasks
[github]: started day 26 as 14th of September, 2019
[uuk]: finished prebuild system to an runable point
[uuk]: fixed bug: space / shift for flying works in chat
[uuk]: fixed bug: /help-command does not work (#1)
[uuk]: fixed bugs around command parsing which were causing /give and /give @s raising exceptions (#4)
[uuk]: optimized crafting system & fixed bugs around it (#1)
[uuk]: fixed bug: only-items were not loaded (this was the reason for recipes not working)
[uuk]: fixed bug: ResourceLocator can't load right from item-directory
[uuk]: fixed bug: block models are loaded twice -> less loading time
[uuk]: fixed bug: shift-click on crafting output does delete all
[uuk]: fixed bug: combining two inventory slots gets the slot you have with your mouse lost
[uuk]: fixed bug: sometimes, an chunk more than expected was generating
[uuk]: fixed bug: blocks can be setted at corners of the blocks

todo: fix bug: falling blocks are falling after a few blocks strange (is fall-function called multiple times?)

todo: optimize generating models & generating image atlases because they are taking to long to finish

todo: fix bug: somehow, block (?) items get alpha-data in hotbar sometimes


todo: are inventories cleared when world is cleared? -> add an inventory flag to weither clear it or not
todo: add an event called on_world_leave, on_world_enter, on_world_clean

todo: add an new selector @ same as @s

todo: add an debug world generator which can be selected in system

todo: add option to log what is registered for every registry

todo: add crafting shape recipes

todo: add blocks: stone bricks, chiseled stone brick, cracked stone brick

todo: add an back-button to world gen config
todo: add some kind of info to screen for generation
todo: add an quite game button to start screen
todo: add an button "go to github project" which opens the internet browser with an link to github
todo: make the info label hideable by key combo
todo: game info label is not good formatted (spacing)
todo: make "/" open chat with "/" added by default (#1)
todo: set the caption to something like "mcpython" and make every other caption base on it (may be an new set_caption-method?)

todo: implement tags & bind to recipes
todo: when player touches the ground, stop flying(or there will be that really weird thing when you touch down using
    Shift and some time later, you want to jump, you just spring up and hang the air......) (#1)

todo: split multi-registries into their parts

todo: add active index to chat so you can switch were you are editing

todo: can we add slabs?
todo: make resourcepacks fully functional: sorting, auto-rebuild
todo: add option for inventories to be visable when another is also visable
todo: add loot tables (also for block drops)
todo: implement base_image to slot for base item & bind to armor & offhand slots
todo: move recipe loading to loading with looking at the blockhandler table

started these clone on 12th of July, 2019
[github]: started day 1 as 12th of July, 2019
[github]: created git repo, author: uuk, uuk has now all rights onto these project
[uuk]: added tasks.list storing some todo's for the future
[uuk]: added version.info file
[uuk]: added tools/updatelicenceheaders [1]
[github]: started day 2 as 13th of July, 2019
[uuk]: added tools/updatelicenceheaders [2]
[uuk]: added code from https://github.com/fogleman/Minecraft
[uuk]: created __main__.py for launching
[uuk]: fixed missing call of main.main() in __main__
[uuk]: fixed library bug locally, if somebody gets when closing the window an exception from weakref, contact me and I
        will give you an workaround
[uuk]: removed compatibility to python 2
[uuk]: when starting, mouse will NOT be locked anymore
[uuk]: splitted everything into single files
[uuk]: added warning msg when update is called to less
[uuk]: new chunk format: (x, z) instead of (x, 0, z)
[uuk]: added event/EventHandler
[uuk]: added globals
[uuk]: added events
[uuk]: added exception handling for events
[uuk]: added base class for blocks and block handler
[uuk]: added missing texture to texture.png
[uuk]: all blocks are now using the new block system
[uuk]: added hooks for all different block uses to Block-class
[uuk]: added dirt-block
[uuk]: added "air"-block
[uuk]: added cleanup & regenerate-function to model
[uuk]: pressing "N" ends now in an new level
[uuk]: added State-class, StateHandler, StatePart
[uuk]: added activate/deactivate callback functions to EventHandler
[uuk]: added State for game, StatePart of GameLoop
[uuk]: moved all eventhandling out of window into GameStatePart and GameState
[uuk]: added Escape-state
[uuk]: fixed some function misspells
[uuk]: added state/ui for buttons
[uuk]: added event/EventInfo for getting an info storing exactly when event args are True
[uuk]: fixed possible memory leak when changing fast chunks (chunks were shown before other were hidden)
[uuk]: added assets-folder
[uuk]: added some resources from mc 1.14.4-pre5
[uuk]: added textures/helpers for image editing, for that PIL is required
[uuk]: added local to globals
[uuk]: added tmp-folder
[github]: started day 3 as 14th of July, 2019
[uuk]: finished UIPartButton
[uuk]: some licence header improvements
[uuk]: added UIPartLable
[uuk]: added callbackhelper - an class for calling an function with extra args
[uuk]: fixed that when switching statets sub-parts are recreated so we are not removing the old
[uuk]: finished EscapeState for the moment
[uuk]: added StateStartMenu
[uuk]: added two new rendering events: "render:draw:2d:background" & "render:draw:2d:overlay"
[uuk]: added text_size attribute to UIPartLable
[github]: started day 4 as 15th of July, 2019
[uuk]: fixed bug: world is invisable after loading
[uuk]: added immediate-parameter to sector-functions of Model
[uuk]: fixed bug: you can spawn in blocks
[uuk]: added TickHandler with simple ticking
[uuk]: added on_block_update()-method to Block
[uuk]: removed N-key to generate an new level
[uuk]: added ability to use add_block & remove_block with block instances
[uuk]: sand will now fall by 2 Blocks / sec
[uuk]: added textureatlas
[uuk]: added helper function for transforming an pyglet image into an pillow one
[uuk]: added resourcelocator making it possible to extract resources direct out of the .jar file,
       an public instance is used
[uuk]: removed textures from system
[uuk]: removed texture group of model, we are using now texture atlas system
[uuk]: added ModelLoader
[uuk]: setup() was callen twice in __main__.py
[github]: started day 5 as 16th of July, 2019
[uuk]: fixed bugs around Model system
[uuk]: added missingtexture-image
[uuk]: added cube_verices_2 & tex_coords_2 for definiting all dimensions (xyz)
[uuk]: missing texture will now be loaded into every texture atlas
[uuk]: model.hide_block & model.show_block accepts now also blocks
[uuk]: added auto-injected misssing-texture-block
[uuk]: ResourceLocator accepts now files without G.local before
[uuk]: if an face is not definitied, it will be missingtexture
[github]: started day 6 as 17th of July, 2019
[uuk]: fixed bugs around the model system & the atlas system
[uuk]: added some security checks in various functions
[uuk]: added some cleanup function into some functions
[uuk]: added assets/models/block_modified-folder for giving the game alternative models to load (used for grass at the moment)
[uuk]: added texture/factory for classes working with images from pre-definited files
[uuk]: added the following blocks: bedrock, cobblestone
[uuk]: made stone brakeable
[uuk]: added some kind of info state
[uuk]: added UIPartImage
[github]: started day 7 as 18th of July, 2019
[uuk]: optimized above state
[uuk]: updated jar-archive to 1.14.4-pre6
[uuk]: added interaction to above state
[uuk]: added player-class
[uuk]: added activate_crosshair-attribute to StatePartGame
[uuk]: added Inventory, InventoryHandler, Slot, ItemStack
[uuk]: added Items, Stone-item
[github]: started day 8 as 19th of July, 2019
[uuk]: added PlayerHotbar-Inventory
[uuk]: fixed bug: stone has no texture location
[uuk]: fixed bug: copy of slot has no itemstack-attribute
[uuk]: fixed bugs around rendering inventorys
[uuk]: slot position is now relative to base position of background image, making resizing now working correct
[uuk]: added json-support to ResourceLocator
[uuk]: added config-file-option to Inventory
[uuk]: pressing ESC in escape-state will now return to game
[uuk]: added factory entry: generating hotbar image
[uuk]: added on_create-function to Inventory
[uuk]: added resize & cut task to texture/factory
[uuk]: added ItemImageTable and reworked old Slot-system to use it; items will now be resized internally
[uuk]: added key.R support for reloading inventory config
[uuk]: added add_to_free_place-function to player
[uuk]: moved hotbar a little bit down
[uuk]: added reload_config-function to Inventory
[uuk]: moved a lot of stuff into inventory config
[uuk]: added selection for active inventory slot
[uuk]: fixed bug with amount label rendering at wrong position
[uuk]: fixed miss-spell of Inventory's position-attribute named positon
[uuk]: fixed bug: amount labels are overlapped by next items
[github]: started day 9 as 20th of July, 2019
[uuk]: added allow_player_remove & allow_player_insert-attribute to Slot, added to config system
[uuk]: removed old block selection system
[uuk]: added on_draw_over_image-function to Inventory
[uuk]: fixed bug: in gamemode 1, bedrock can't be broken
[uuk]: added mouse-middle support
[uuk]: fixed bug: itemstack is getting the class, not an instance of it when creating with itemname
[uuk]: added main-part of the inventory
[uuk]: enabled sub-locations in archives for ResourceLocator
[uuk]: when adding an empty array to texture atlas, it will be simply skipped
[uuk]: updated .jar to 1.14.4
[uuk]: fixed bug: when opening an inventory, you can move yourself by arrow-keys
[uuk]: key E will close now also the inventory
[uuk]: fixed bug: ESC can be used when an inventory is opened to get to the esc-screen
[uuk]: fixed bug: resize with factory was some kind broken due to an wrong argument
[uuk]: added allow_player_add_to_free_place-attribute to slot
[uuk]: fixed bug: slotcopy has no allow_[...]-attributes
[uuk]: added mouse interaction
[uuk]: fixed bug: remove/insert options to Slot were wrong
[uuk]: added Chat as an inventory
[uuk]: added util/opengl
[uuk]: added event "user:keyboard:enter" when user enters an text (window: on_text(text: str))
[uuk]: added Command-system
[uuk]: added /give-command (structure: selector, itemname, optional: int)
[uuk]: add_to_free_place of player will now search for an used stack before using empty
[uuk]: fixed bug: add_to_free_place when adding to an not-full stack the result will be what was added not the rest
[uuk]: fixed bug: amount for slot was after creation always 2 due to an missed debug line
[uuk]: fixed bug: ItemStack.copy() is not right
[uuk]: added /gamemode-command with number and string using
[uuk]: fixed bug: in gamemode 3, you can't move
[uuk]: fixed bug: in gamemode 3, hitbox of blocks were drawn
[uuk]: added SELECT_DEFINITED_STRING-type to CommandEntryType, reworked /gamemode-command to use it
[github]: started day 10 as 21th of July, 2019
[uuk]: added OPEN_END_UNDEFINITED_STRING-type to CommandEntryType
[uuk]: added /execute-command
[uuk]: added ParsingCommandInfo for storing how and where the command is parsed from
[uuk]: position & selector types will now return an list of elements instead of an single one
[uuk]: position will accept now ~-inputs
[uuk]: added commands: /kill, /clear, /teleport, /tp
[uuk]: main_entry can now be list
[uuk]: added kill-method to player
[uuk]: updated licence headers to fit the version of jar used in these project
[uuk]: fixed bug: Can get 0-Slot by right-clicking an 1-Slot
[github]: started day 11 as 22th of July, 2019
[uuk]: fixed some bugs around /tp & /teleport
[uuk]: added some security to math functions
[uuk]: added /help-command
[github]: started day 12 as 2nd of August, 2019
[uuk]: added StateBlockItemGenerator
[uuk]: added clearcolor-attribute to StatePartGame
[uuk]: added get_used_models-attribute to Block
[uuk]: speeded model loading up by loading only the used models and the models which have childs
[uuk]: added block_update-parameter to add & remove functions of model
[uuk]: added build-limits (y <0 and >255), changed world generation a little bit to fit in
[uuk]: pressing during moving mouse rotates now the camera normally
[uuk]: braking & setting blocks is now always when pressing mouse, not only on_press
[uuk]: added brake-time-attribute to block, gamemode 1 is instant mining
[uuk]: added events: user:mouse:release, user:mouse:drag
[uuk]: added setted_to-attribute to Block
[github]: started day 13 as 17th of August, 2019
[uuk]: added some interesting tasks
[github]: started day 14 as 18th of August, 2019
[uuk]: added the following blocks: coal ore, iron ore, gold ore, emerald ore, redstone ore, diamond ore, lapis ore
[uuk]: fixed bug: ItemStone-class still exists outside the generation system
[uuk]: splitted model into Chunk, Dimension & World, removed Model, renamed globals model to world
[uuk]: implemented some kind of Dimension-system
[uuk]: moved some code for adding / removing blocks around
[uuk]: fixed bug: braking "void" raises an exception due to an missed check
[uuk]: removed world gen for now, only one stone block is generated
[uuk]: removed old & unused field out of chunk-class
[uuk]: added system for generation task storage in Chunk
[uuk]: removed initialize function from system, removed generation events
[uuk]: new world generation system: An feature->layer->config definition system
[uuk]: implemented layer system with LayerConfig, added normal Bedrock layer
[uuk]: added GenerationMode-system, added default overworld generator
[github]: started day 15 as 19th of August, 2019
[uuk]: system will now generate properly
[uuk]: finished bedrock layer
[uuk]: batches will now be part of dimension instead of chunk
[uuk]: added some code to chunk to definite parameters which should be loaded when an new chunk is created. usefull for
       world gen tasks
[uuk]: added reload-command, /generate [<x> <z>]-command
[github] started day 15 as 21th of August, 2019
[uuk]: added TemperatureMapLayer
[uuk]: fixed bug in #1 by adding some checks and resets
[uuk]: added feature 1 out of #1, so player will be killed under level -10
[uuk]: added DefaultBiomeLayer
[uuk]: fixed bug: value in LandMassLayer-map was float instead of landmass name
[uuk]: fixed bug: BlockSand fall-system gave errors due to an overlooked look into model.world
[uuk]: fixed bug: world is not generated during world generation call, instead during runtime -> lag!
[github] started day 16 as 22th of August, 2019
[uuk]: fixed bugs around world generation
[uuk]: removed ocean from landmasses, it is not used at the moment
[uuk]: added biome-lable (not working?)
[uuk]: added gamemode lable
[uuk]: added new biome: plains
[uuk]: tweaked some world generation constants
[uuk]: added option in StatePartGame to disable lable
[uuk]: in StateBlockItemGenerator, caption will show where we are
[uuk]: fixed bug: player.add_to_free_place could place items into armor, crafting & offhand slots
[uuk]: crafting slots of player will now be automaticly cleared when closed addding stuff into inventory
[uuk]: added sprinting, reworked speed for flying & gamemode 3
[uuk]: added HeightMapLayer, added get_height_range-function to Biome
[uuk]: fixed biome-lable, missed an normalize(vector)-call
[uuk]: reworked addition of blocks in chunk by adding extra map due to better access in future systems
[uuk]: added DefaultStonePlacementLayer for generating stone
[uuk]: fixed bug: generating chunks during runtime causes them to never get the is_ready-flag True
[uuk]: Chunk.update_visable is now faster by making it runtime-operating
[uuk]: added DefaultTopLayerLayer for for example grass & dirt on top of the stone
[uuk]: lable size is now smaller, block looking at is now part of lable
[uuk]: added BlockFactory
[github] started day 17 as 23th of August, 2019
[uuk]: added block-base-system, added IFallingBlock, added system for registry in BlockHandler
[uuk]: fixed bug: braking blocks did not update visable state
[uuk]: added ItemFactory
[uuk]: added items: apple, arrow, baked potato, beef, beetroot, beetroot soup, black dye, blaze powder, blaze rod,
                    blue dye, bone, bone meal, book, bowl, bread, brick, broken elytra, brown dye, carrot,
                    charcoal, chicken, chorus fruit, clay, coal, cod, cooked chicken, cooked cod, cooked mutton,
                    cooked porkchop, cooked rabbit, cooked salmon, cookie, cyan dye, diamond, dried kelp, egg,
                    emerald, ender eye, ender pearl, feather, fermented spider eye, flint, ghast tear,
                    glistering melon slice, glowstone dust, golden apple, gold ingot, gold nugget, gray dye, green dye,
                    gunpowder, ink sac, iron ingot, iron nugget, lapis lazuli, leather, light blue dye,
                    light gray dye, lime dye, magenta dye, magma cream, melon slice, mutton, name tag, nether brick,
                    nether star, nether wart, orange dye, pink dye, poisonous potato, porkchop, potato, purple dye,
                    quartz, rabbit, redstone, red dye, rotten flesh, salmon, shulker shell, slime ball, spider eye,
                    stick, string, sugar, wheat, white dye, yellow dye
[uuk]: added areas to the log
[github]: started day 18 as 24th of August, 2019
[xkcdjerry]: fixed a bug out of #1
[uuk]: added xkcdjerry to licence headers
[uuk]: fixed bug in #1: when player falls out of world, he falls some way through ground after respawning
[uuk]: after a world is generated, game is now faster
[uuk]: BlockItemFactory is now faster (#1)
[uuk]: player default gamemode will now be 0 (#1)
[uuk]: fixed bug: player gamemode is not reset after generating new world
[uuk]: changed fly key to double space (#1)
[uuk]: changed behaviour of flying (#1?) so now pressing space / shift goes up/down
[uuk]: added mouse-scroll system (#1) for slots
[uuk]: fixed bug in #1: exception like World object has no attribute world
[uuk]: fixed bug in #1: can't set blocks in gamemode 0 due to an wrong gamemode check
[uuk]: added blocks: coal block, diamond block, emerald block, gold block, iron block, lapis block, redstone block
[uuk]: CommandEntries are now registered to CommandHandler and are extendable
[uuk]: made generated area smaller for faster generation time
[uuk]: added an registry for selectors, current selectors: @s, @p, @r, @a
[uuk]: added /setblock-command, /fill-command
[uuk]: added dimension-attribute to command info
[uuk]: fixed bug: position-entry does only decode ~-parameters, not valid setting it
[uuk]: fixed some miss-spells
[uuk]: added new enum: EnumSide
[uuk]: added is_solid_side-function to Block
[uuk]: util.math.get_max_y(position) accepts now also an x,z position
[uuk]: util.math.cube_vertices & util.math.cube_vertices_2 supports now face-deactivating
[uuk]: made it possible to hide individual block faces
[uuk]: fixed bug: Dimension.get_block did not access blocks that should be generated in the future
[uuk]: fixed bug: Chunk.get_block did NOT give None back if position is empty
[github]: started day 19 as first of September, 2019
[uuk]: cleaned up files & fixed some bugs:
    - block directory
[github]: started day 20 as second of September, 2019
    - chat directory
[uuk]: /generate accepts now an area
[uuk]: /give-command give you now maximal the max stack size, not more
    - event directory
[uuk]: fixed bug: TickHandler.bind_redstone_tick was self-calling
    - gui directory
[uuk]: implemented crafting system
[uuk]: slot has now an on_update, allow_half_getting & on_shift_click implementation
[uuk]: ItemStacks & Items have now an == implementation
[github]: started day 20 as third of September, 2019
[uuk]: added states to customize parts of the world generation
[uuk]: added ToggleButton
[uuk]: tweaked some collision detection
[uuk]: rewritten ResourceLocator, made it possible to add own resource packs
[uuk]: rewritten model system, BlockStates are now used
[uuk]: rewritten texture atlas system, rewritten texturefactory
[github]: started day 21 as 5th of September, 2019
[uuk]: worked on the rewrite (took me longer than expected due to some errors in model texture getting)
[uuk]: implemented base log system  (#1)
[uuk]: block states accept now rotations, the next will optimize it a bit
[uuk]: increased texture atlas size to 64x64 images per atlas, and it is now possible to create some with custom size
[uuk]: fixed bug: math.tex_coords has wrong texture order
[github]: started day 22 as 6th of September, 2019
[uuk]: fixed bug: BlockState draws all states which should be selected by random at once
[uuk]: added spruce, birch, jungle, acacia & dark oak log; oak, spruce, birch, jungle, acacia & dark oak planks (#1)
[uuk]: fixed bug: some faces of non-upper logs were rotated wrong due to an wrong texture rotation
[github]: started day 23 as 7th of September, 2019
[uuk]: speed up loading again
[uuk]: added stripped logs, wood, stripped wood, leaves
[uuk]: added BlockConfig for adding blocks with alpha (there is stored that they have alpha)
[uuk]: added alpha-batch to rendering system
[uuk]: added gravel, andesite, polished andesite, diorite, polished diorite, granite, polished granite
[uuk]: blocklist of blockhandler is now sorted after name
[uuk]: added trees to world generation
[github]: started day 24 as 8th of September, 2019
[uuk]: moved registries to one system. added registration events. Registries can be locked and will be after startup
[uuk]: registry are now named
[github]: started day 25 as 9th of September, 2019
[uuk]: finished up above changes
[uuk]: fixed bug: @a and @r were not registered correct
[xkcdjerry]: removed old unused code in __main__->try->main
[uuk]: added setup tasks
[github]: started day 26 as 14th of September, 2019
[uuk]: finished prebuild system to an runable point
[uuk]: fixed bug: space / shift for flying works in chat
[uuk]: fixed bug: /help-command does not work (#1)
[uuk]: fixed bugs around command parsing which were causing /give and /give @s raising exceptions (#4)
[uuk]: optimized crafting system & fixed bugs around it (#1)
[uuk]: fixed bug: only-items were not loaded (this was the reason for recipes not working)
[uuk]: fixed bug: ResourceLocator can't load right from item-directory
[uuk]: fixed bug: block models are loaded twice -> less loading time
[uuk]: fixed bug: shift-click on crafting output does delete all
[uuk]: fixed bug: combining two inventory slots gets the slot you have with your mouse lost
[uuk]: fixed bug: sometimes, an chunk more than expected was generating
[uuk]: fixed bug: blocks can be set corners of the blocks
[uuk]: fixed bug: can't set blocks (sorry, I have not tested the above bug fix in the list)
[uuk]: fixed bug: falling blocks were not falling correct
[uuk]: fixed bug: inventory is not cleared when leaving world
[uuk]: added @-selector which works the same as the @s-selector
[uuk]: added debug world generator
[xkcdjerry]: added a requirements.txt for a quick-and-dirty pip download
[uuk]: fixed bug: middle-clicking on an not-filled slot in gamemode 1 gives an exception
[uuk]: added blocks: stone bricks, red sand, concrete, concrete powder, wool
[uuk]: optimized blockfactory by adding some more file modes & making one file out of more than one (planks, leaves, ...)
[uuk]: fixed bug: build-folder is not cleared when rebuilding
[uuk]: "/" will open the chat with "/" added to it (#1)
[uuk]: added active index to chat so you can edit where you want (not complete working!)
[uuk]: fixed shaped crafting recipes, reworked some recipe check parts to speed up (#9)
[uuk]: reload-command will reload now also recipes
[uuk]: moved recipe loading point to the startup-load so errors are shown before
[uuk]: fixed bug: slot interaction events are not callen normally
[uuk]: added tag system
[uuk]: added tag system to crafting
[uuk]: cleaned up 1.14.4.jar a bit so it is now smaller
[uuk]: fixed bug: shift-click on output slot does not work
[uuk]: added auto-gen-toggle-button & world barrier button to world config
[uuk]: added config system to World-class
[uuk]: fixed bug: when the player dies during moving an item in the inventory, the item is not deleted
[uuk]: fixed bug: config in world gen config is not reseted after re-joining the screen
[uuk]: added the code to work with the new two buttons
[uuk]: added some new flags into world generation, added auto generation
[uuk]: fixed bug: when looking on not-generated blocks, but one some which were added to the generation system, game
       gives an exception
[uuk]: when on ground and in gamemode 1, flying will stop
[uuk]: fixed some bugs around player killing & world leaving
[uuk]: added progress bar to ui elements
[uuk]: fixed bug: it was possible that blocks are generated during non-game states
[uuk]: line width of focused block is now bigger
[uuk]: fixed some bugs around interaction with non-generated
[uuk]: fixed bug: game crashes when in debug world and generating new chunks
[uuk]: fixed bug: falling blocks are falling in debug world
[uuk]: item factory optimized
[uuk]: added new tag-type: "naming" storing at the moment color names
[uuk]: moved the point were tags are loaded
[uuk]: fixed bug: when deactivating world barrier, but auto gen is enabled, auto gen does NOT work
[uuk]: items are now loaded by an function, not on import
[uuk]: fixed bug: beetroot soup can be stacked up to 64
[uuk]: optimize recipe lookup
[uuk]: added crafting table
[uuk]: added player interaction system
[uuk]: pressing space & shift in gamemode 1 will now end in non-flying
[uuk]: added crafting table inventory
[uuk]: /reload-command will now reload also inventory config
[uuk]: exception on combining two stacks
[uuk]: rewritten SlotCopy
[uuk]: added get_interaction_slots-method to inventory
[uuk]: changed some code so you can direct walk into new chunks but you won't be able to see blocks under you (#7)
[uuk]: added tools (#9)
[uuk]: fixed bug: stone tools were not added
[uuk]: fixed bug: texture factory was generating without rebuild mode
[uuk]: fixed bug: in crafting table, first slot was not used for crafting (so some recipes were not working)
[uuk]: fixed bug: world gen config is not resetted correctly
[uuk]: hitcheck will now be every 0,05 blocks an check, not every 0,125 blocks, maybe fixing #7
[uuk]: fixed bug: when opening the crafting table with an block in hand, it was setted to the block
[uuk]: slot where mouse is on is now highlighted
[uuk]: fixed bug: copy of hotbar slots in main inventory & slot of crafting table where offsetted by one pixel
[uuk]: added empty slot image option (used for armor slots & offhand slot)
[uuk]: added info lable for what is hold in hand over the hotbar
[uuk]: changed caption from "Pyglet" to "mcpython 4"
[uuk]: fixed bug: can't rebuild
[uuk]: fixed bug: when build-folder does not exists, rebuild were not possible
[uuk]: BlockItemFactory is now part of the prebuild system
[uuk]: added new command: "/iteminfo [hand/inventory/item <itemname>/block inventory <position>]" which gives info about items
[uuk]: fixed bug: when has_block flag is setted for ItemFactory-file, block name is not defaulted to item name
[uuk]: added inventory-getter to block
[uuk]: items will now be using an TextureAtlas for holding all the item images. this will be generated only when in
       rebuild mode
[uuk]: made item image changeable from item's side
[uuk]: items must provide all used images on class for ImageAtlas generation (default: default image)
[uuk]: harts, hunger, xp & armor level is now displayed
[uuk]: hotbar is now also displayed in escape state
[uuk]: added new attributes to player: armor_toughness
[uuk]: player will get now damage when under -10, not simple be killed
[uuk]: updated pyglet to 1.4.5 and Pillow to 6.2.0
[uuk]: added draws to xp of state
[uuk]: fixed bug: full armor icon was cut wrong
[uuk]: added /xp & /experience command
[uuk]: different actions will now affect hearts and hunger
[uuk]: added Totem of Undying with functionality
[uuk]: reworked parts of item factory to fit with extensions
[uuk]: added food base class, ItemFactory can now use it
[uuk]: added item for beetroot, beetroot soup, carrot, dried kelp, golden carrot, melon slice, potato, puffer fish,
       pumpkin pie, rabbit stew, beef, chicken, cod, mutton, porkchop, rabbit
[uuk]: added command: /registryinfo <name> [<attribute>]
[uuk]: fixed bug: /xp command was missing help info
[uuk]: made food eatable
[uuk]: fixed bug: getting damage from standing still
[uuk]: fixed bug: not all cooldowns were global and could be reseted for some reasons
[uuk]: rewritten block & item factory, no json files are needed now
[uuk]: implemented new storage for block items
[uuk]: fixed bug: cooked porkchop was not loaded correct
[uuk]: added new items: cooked beef, tropical fish, experience bottle
[uuk]: deleted old block injection system
[uuk]: added new blocks: terracotta
[uuk]: added new naming tags: treetypes, oretypes
[uuk]: fixed bug: info lable for item is drawn behind icons for hearts & hunger
[uuk]: moved log blocks to block factory
[uuk]: tool system is now working as excpected, brake time is now cached
[uuk]: added more quartz blocks, smooth stone, stone brick variants
[uuk]: added shears
[uuk]: added armor, excluding leather armor
[uuk]: added tags for armor
[uuk]: slots can be now configurated to only allow special item tags, this is now used in armor slots
[uuk]: added tags to /iteminfo
[uuk]: fixed bug: when resizing the window when running with --rebuild flag, block item images get wrong
        -> fix: window is NOT resizeable in this time
[uuk]: fixed bug: sometimes when --rebuild flag running, block item images gets everywhere (0, 0, 0, 0) as color
[uuk]: fixed bug: slot at mouse at at first get not at mouse
[uuk]: fixed bug: when ones left the last position in chat, it was NOT possible to reach there anymore
[uuk]: fixed bug: can set blocks inside yourself
[uuk]: fixed bug: armor icons where not correct
[uuk]: fixed bug: falling blocks where not sending blockupdates to surrounding blocks
[uuk]: fixed bug: regenerating was dealing damage instead of giving hearts back, so
[uuk]: fixed bug: collision detection with blocks to get damage was wrong
[uuk]: fixed bug: hunger icons where not correct
[uuk]: fixed bug: physics were running when on down tps to slow so collision issues occurred
[uuk]: slowed down intern clock speed to increase fps
[uuk]: fixed bug: when eating, items were no consumed
[uuk]: rewritten event system to support speed-assignment. Everything is now ordered in some so called EventBuses
[uuk]: implemented custom event bus to every created state, updated states to use this
[uuk]: added progressbar to BlockItemFactory
[uuk]: fixed some bugs around progress bar rendering
[uuk]: new world generation config screen
[uuk]: created UI base class
[uuk]: added new UI element: TextInput
[uuk]: fixed typos in UIPartImage
[uuk]: added new world config entries: world size, player name, world seed


change button draw to use image.get_region() instead of pillow's crop function

add an display attribute to WorldGenConfig
add an dimension attribute to WorldGenConfig -> sort after dimension
add an toggle button for all possible WorldGenConfigs

change world generation to be based on a given seed (all maps!)


issues to implement / fix
todo: fix bug: in some rare cases, mouse up is not handled an will cause blocks to be added until game close
    (after closing crafting table) (?)
todo: fix bug: stone blocks are shown during generation so they appear at not-wanted positions
todo: fix bug: when jumping in an block from downwards, you get damage
todo: fix bug: when jumping into an non-full block, getting damage
todo: fix bug: when NOT rebuilding and entering the world, in first esc-state, bgcolor is white
todo: fix bug: somehow, block (?) items get alpha-data in hotbar sometimes & number of items is not drawn,
        maybe due to an clear & draw error?
todo: fix bug: falling blocks are NOT updating visable state

currently working on / planed for next commit(s):

an update to the system of states

-gui elements:
todo: add slider, checkbox, text field

-world gen state: (complete overhaul)
todo: add an option to toggle world generation size
todo: add some kind of info to screen for generation
todo: make player gamemode selection not gamemode, instead world mode defined by world generator
todo: make the player select the seed for world
todo: make the player select name of world

todo: add some kind of custom World Generation generator: options for biome selection per dimension, structures
todo: make this save/load-able from .json files stored in presets/<filename>.json

-start screen
todo: add an quite game button to start screen
todo: add an button "go to github project" which opens the internet browser with an link to github (see util/callbacks)
todo: add an real start menu background & option background

-inter-game state
todo: make the info label hide-able by key combo (maybe an StatePart which is activated & deactivated?)
todo: game info label is not good formatted (spacing)
todo: add death screen
todo: change crossshair to left-upper icon in gui/icons.png (not visable because it is white!)

-config screen
todo: add config screen with back button, reset button
todo: add config page system, add pages for: player name, movement speeds, gravity, max jump height, jump speed,
    player height

other tasks that should be done in near future
todo: add brake animation on block (draw with alpha over the block?)
todo: cache how much xp is needed to next level (function is callen every draw by xp draw -> decrease FPS)
todo: make command input errors better
todo: add Tool & Armor-durability
todo: add leather armor
todo: add language files, bind to buttons & lables
todo: add Language Selection State
todo: add hovering info to items, make them use Language files
todo: increase fps during blocks falling (or another reason for decreased FPS)

other additions which could be useful

todo: add logging system, add crashlogs, add runtime exceptions, make tool to localize traceback strings from G.local

todo: move to pre-build: block item factory, recipe sorting, model sorting & generation, texture atlas generation
todo: add an task to pre-build: download minecraft jar & do cleanup (remove .class files)

todo: make hitbox draw & check on BoxModels

todo: can we color grass during runtime (OpenGL function?) so we don't need an pre-generated texture?

todo: implement area draw for BoxModel faces (so not the whole image is drawn, only the needed part)
todo: add blocks: slabs, stairs, fences, walls, signs, trapdoors, doors, saplings, barrel, chest, crafting table,
    barrier, buttons, pressure plates, carpet, ice, glass, stained glass, stained glass pane, bookshelf, mushrooms,
    sandstones (also red variants)

todo: add Plant-system, plant brake, plant base class (normal & double), plant grow,
    tweak model system to support plant models
todo: add flowers & bind to world generation as an seperated layer

todo: add an loading event bus for loading events, move every load entry to this bus, add an
    event/RegistryLoadingHandler for doing stuff on this event bus, every single entry should be loaded at its own,
    create an system which tries to notate stuff found on event bus to G.registry & only opens the used registries
todo: every loading stage should have the following parts: prepare, instance registrate, function based registrate,
    finish
todo: split multi-registries into their parts
todo: add event which is called when state is changed

todo: make resourcepacks fully functional: sorting(, auto-rebuild)
todo: add option for inventories to be visible when another is also visible
todo: add loot tables (also for block drops)

todo: add only rotated textures to texture atlas if needed (load from block states)

todo: add an check in loading if an recipe could be crafted & if the output is arrival (-> look also at the block table)

todo: fix height map generation

todo: PreGenerate additions: -TextureAtlas build-locate-move, index file (like for items)
                             -ModelHandler build-locate-move for preparing & indexing, index file
                             -RecipeHandler build-locate for sorting, indexing, reachable checks

todo: add sneaking, make collide function check for it

todo: add hart shake animation when less than 2 (up & down movement)

todo: after python 3.8 came out (may be on the 14th of October, 2019), use multiproccessing & shared memory for world gen
    (kind of local one-client-one-server system)

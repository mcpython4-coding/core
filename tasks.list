These is an tasklist covering all different tasks these project has
It is like an collection with tasks which have not thought over when to be implement


add save / load of world
add /loot-command
todo: fix bug: in some rare cases, you can walk through the corner into the block (see forgleman #104) -> hitbox update
add can_break-attribute to item to definite items that can break blocks in gamemode 2
add the following block inventories with blocks: furnes and furnes-like inventorys, brewing stand, anvil, enchantment table
add Enchantment-baseclass with attribute is_combine_able_with(...) -> bool & all enchantments
add commands: /me, /say, /msg, /tellraw, /title, /replaceitem, /debug, /reload (real command), /clone
add gamerules, /gamerule command
add datapacks with .mcfunction-files, add resourcelocator binding for recipes, add /function & /shedule -command
make the following attributes as json-saved files: Block.is_break_able, Block.break_time, Item.tool_types, Item.max_durability, Item.breaktime_of
add time-system and /time-command
add scoreboards
add difficulty attribute to world

may be implemented on another method:
    implement client/server by making an @client and @server notation system which will decide returning an callable object
        representing an network or direct access to the function (so afterwards changeable by joining server)

implement / finish pre-build system:
    add an auto-valid-check which will rebuild parts automatically when changed
    add event called system:rebuild which is called when it is its time to rebuild
    rewrite recipe loading
    create some index files which store the state of the system
    add some kind of info for the player what is currently done
    texture atlas will be pre-builded in a file named minecraft_1.png (mods will have [modname]_[n].png)
    create an global table called texturemap.json which links texture ids to atlases
    models will be pre-prepared and stored in an format pointing by texture only to the texture id
    crafting recipes will be also pre-prepared for better loading times
